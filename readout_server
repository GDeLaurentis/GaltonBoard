#!/usr/bin/env python

import sys, os
from galton.readout import GaltonBoardRead
ro = GaltonBoardRead()

import matplotlib as mpl
mpl.rcParams['toolbar'] = 'None'

import matplotlib.patches as patches
import matplotlib.pyplot as plt

fig = plt.figure(figsize=(3.4,6.1))

ax = plt.subplot()

#ax.set_xlim((0,1))
#ax.set_ylim((0,1))

dataplot, = plt.plot([3,5,4,3,2,1,4,6,7,8,1,9,12],'ok')

def key_press(event):
    if event.key == 'q':
        sys.exit(0)
fig.canvas.mpl_connect('key_press_event', key_press)


class ActionDict(dict):
    def __missing__(self, key):
        def do_nothing(): pass
        return do_nothing
action = ActionDict()

button_off = patches.Circle((0.1,0.1),0.1,picker=1, color='red', transform=fig.transFigure, clip_on=False)
action[button_off] = lambda: sys.exit(0)
ax.add_patch(button_off)

count_text = plt.text(0.2,0.02, '%s'%([0]*13), color='k', fontsize=12, transform=fig.transFigure, clip_on=False)

button_getdata = patches.Circle((0.25, 0.75), 0.2, picker=1, color='blue', transform=fig.transFigure, clip_on=False)
def getdata():
    print 'get data'
    count = ro.numeric_count()
    dataplot.set_data(range(13),count)
    count_str = ro.formatted_count()
    count_text.set_text(count_str)
    with open('/var/www/html/galton_counts.txt','w') as f:
        f.write(count_str + '\n')
    plt.draw()
action[button_getdata] = getdata
ax.add_patch(button_getdata)


button_reset = patches.Circle((0.75, 0.75), 0.2, picker=1, color='orange', transform=fig.transFigure, clip_on=False)
def reset():
    print 'reset'
    ro.reset_counters()
    dataplot.set_data(range(13),[0]*13)
    plt.draw()
action[button_reset] = reset
ax.add_patch(button_reset)

fig.canvas.mpl_connect('pick_event', lambda ev: action[ev.artist]() )

textstyle ={
    'color' : 'cyan',
    'fontsize' : 24,
    'transform' : fig.transFigure,
}

plt.text(0.17, 0.75, 'update', **textstyle)
plt.text(0.7, 0.75, 'reset',  **textstyle)


# fullscreen if we're on the rpi3
if os.uname()[4][:3] == 'arm':
    mgr = plt.get_current_fig_manager()
    mgr.full_screen_toggle()


plt.show()

exit(0)


#       try:
#        with open('/var/www/html/galton_counts.txt','w') as f:
#                f.write(count + '\n')
